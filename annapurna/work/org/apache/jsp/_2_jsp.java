/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-07-21 13:37:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class _2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/head.jsp", Long.valueOf(1624881837646L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write(" ");
      out.write("     <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("     <link rel=\"icon\"  href=\"static/images/favicon.png\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/font-awesome.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/bootstrap.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/common.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/color.css\" />\r\n");
      out.write("    <style>\r\n");
      out.write("  \r\n");
      out.write("\t.autocom-box{\r\n");
      out.write("\t  position:absolute;\r\n");
      out.write("\t  z-index : 9999;\r\n");
      out.write("\t  border-top: 1px solid black;\r\n");
      out.write("\t  box-shadow:4px 4px 8px -1px black;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-search{\r\n");
      out.write("\t  position :relative;\r\n");
      out.write("\t  padding : 0px 15px;\r\n");
      out.write("\t  \r\n");
      out.write("\t}\r\n");
      out.write("\t#myframe{\r\n");
      out.write("\tbackground-color : white;\r\n");
      out.write("\t position:absolute;\r\n");
      out.write("\t  z-index : 9999;\r\n");
      out.write("\t  border-top: 1px solid black;\r\n");
      out.write("\t  box-shadow:4px 4px 8px -1px black;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js\" integrity=\"sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write(" <style>\r\n");
      out.write(" \t li{\r\n");
      out.write("\t   padding: 10px  20px;\r\n");
      out.write("\t   width : 500px;\r\n");
      out.write("\t}\r\n");
      out.write("\tul{\r\n");
      out.write("\t list-style-type :none;\r\n");
      out.write("\t padding-left : 2px;\r\n");
      out.write("\t cursor:pointer;\r\n");
      out.write("\t font-size : 12px;\r\n");
      out.write("\t}\r\n");
      out.write("\ta.nav-link:hover{\r\n");
      out.write("    background-color: #e0e0e0;\r\n");
      out.write("    border : none;\r\n");
      out.write("    color : black;\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("\t</style>\r\n");
      out.write("\t<ul class=\"\" id=\"id_ulblur\">\r\n");
      out.write("                                         ");
  
                                     
                                      ArrayList<String> nameLikeList = (ArrayList<String>)session.getAttribute("nameLikeList"); 
                                         
                                      ArrayList<String> shopNameLikeList = (ArrayList<String>)session.getAttribute("shopNameLikeList"); 
                                       if(nameLikeList != null){
 
                                       for(String nameLike : nameLikeList){  
                                    
                                    	  
      out.write("\r\n");
      out.write("                                       \r\n");
      out.write("                                       <a class=\" nav-link text-dark  p-0\" ><li class=\"lie p-1\" onclick = \"\">");
      out.print(nameLike );
      out.write("</li></a> \r\n");
      out.write("                                       \r\n");
      out.write("                                   ");
 } }
                                       
                                           if(shopNameLikeList != null){
                                    	   
                                           for(String nameLike : shopNameLikeList){  
                                        
                                        	  
      out.write("\r\n");
      out.write("                                           \r\n");
      out.write("                                           <a class=\" nav-link text-dark  p-0\" ><li class=\"lie p-1\" onclick = \"\">");
      out.print(nameLike );
      out.write("</li></a> \r\n");
      out.write("                                           \r\n");
      out.write("     \r\n");
      out.write("                                       ");
}}
                                           
                                         
                                           
      out.write("\r\n");
      out.write("                                       \r\n");
      out.write("                                       \r\n");
      out.write("                                       \r\n");
      out.write("                                     </ul>\r\n");
      out.write("      <script type=\"text/javascript\" src=\"static/js/index.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
